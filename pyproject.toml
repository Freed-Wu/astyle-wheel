[build-system]
requires = ["scikit-build-core"]
build-backend = "scikit_build_core.build"

# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[project]
name = "astyle"
description = "Artistic Style is a source code indenter, formatter, and beautifier for the C, C++, C++/CLI, Objectiveâ€‘C, C# and Java programming languages"
readme = "README.md"
requires-python = ">= 3.7"
keywords = ["astyle"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]

[[project.authors]]
name = "Wu Zhenyu"
email = "wuzhenyu@ustc.edu"

[project.license]
text = "GPL v3"

[project.urls]
Homepage = "http://astyle.sourceforge.net"
Download = "https://github.com/Freed-Wu/astyle-wheel/releases"
"Bug Report" = "https://github.com/Freed-Wu/astyle-wheel/issues"
Source = "https://github.com/Freed-Wu/astyle-wheel"

[project.scripts]
astyle = "astyle.__main__:main"

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.setuptools_scm"

[tool.scikit-build.sdist]
include = ["src/astyle/_version.py"]

[tool.setuptools_scm]
write_to = "src/astyle/_version.py"

[tool.mdformat]
number = true

[tool.black]
line-length = 79

[tool.isort]
line_length = 79
profile = "black"

# https://github.com/PyCQA/pydocstyle/issues/418
[tool.pydocstyle]
add_ignore = "D205, D400"

[tool.coverage.report]
exclude_lines = [
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
  "\\s*import tomli as tomllib",
]

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]

[tool.cibuildwheel]
archs = ["all"]
before-test = "pip install pytest"
test-command = "pytest {project}"
test-skip = "*-win*"
